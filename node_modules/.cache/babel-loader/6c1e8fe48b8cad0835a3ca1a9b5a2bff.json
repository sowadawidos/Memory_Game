{"ast":null,"code":"var _jsxFileName = \"/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/Leaderboard/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport \"./Leaderboard.scss\";\nimport { LeaderboardList } from \"../LeaderboardList/LeaderboardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Leaderboard = ({\n  leaderboard\n}) => {\n  _s();\n\n  const [filteredLeaderboard, setFilteredLeaderboard] = useState();\n  useEffect(() => {\n    const sorted = leaderboard && leaderboard.sort((a, b) => {\n      if (a.time === b.time) {\n        if (a.moves === b.moves) {\n          if (a.moves === b.moves) return 0;\n          return a.moves < b.moves ? -1 : 1;\n        }\n      } else {\n        return a.time < b.time ? -1 : 1;\n      }\n    });\n    setFilteredLeaderboard(sorted);\n  }, [leaderboard]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"leaderboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard__box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"leaderboard__title\",\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"leaderboard__board\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"leaderboard__board-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title lp\",\n                children: \"LP.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title username\",\n                children: \"Nickname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title moves\",\n                children: \"Moves\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title time\",\n                children: \"Time left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), filteredLeaderboard && filteredLeaderboard.map((element, key) => /*#__PURE__*/_jsxDEV(LeaderboardList, {\n              item: element,\n              id: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 98\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Leaderboard, \"v47kRjOqcMd8JCYPOMwGbhOzdMg=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/Leaderboard/Leaderboard.js"],"names":["React","useState","useEffect","Header","LeaderboardList","Leaderboard","leaderboard","filteredLeaderboard","setFilteredLeaderboard","sorted","sort","a","b","time","moves","map","element","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAO,oBAAP;AACA,SAAQC,eAAR,QAA8B,oCAA9B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAC1C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,EAA9D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAGH,WAAW,IAAIA,WAAW,CAACI,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrD,UAAID,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAjB,EAAuB;AACnB,YAAIF,CAAC,CAACG,KAAF,KAAYF,CAAC,CAACE,KAAlB,EAAyB;AACrB,cAAIH,CAAC,CAACG,KAAF,KAAYF,CAAC,CAACE,KAAlB,EAAyB,OAAO,CAAP;AACzB,iBAAOH,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAAhC;AACH;AACJ,OALD,MAKO;AACH,eAAOH,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA9B;AACH;AACJ,KAT6B,CAA9B;AAUAL,IAAAA,sBAAsB,CAACC,MAAD,CAAtB;AACH,GAZQ,EAYN,CAACH,WAAD,CAZM,CAAT;AAcA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,yBAAd;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAG,gBAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI;AAAG,gBAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAgBQC,mBAAmB,IAAIA,mBAAmB,CAACQ,GAApB,CAAwB,CAACC,OAAD,EAAUC,GAAV,kBAAkB,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAED,OAAvB;AAAgC,cAAA,EAAE,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,oBAA1C,CAhB/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiCH,CAlDM;;GAAMZ,W;;KAAAA,W","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Header} from \"../Header/Header\";\nimport \"./Leaderboard.scss\"\nimport {LeaderboardList} from \"../LeaderboardList/LeaderboardList\";\n\nexport const Leaderboard = ({leaderboard}) => {\n    const [filteredLeaderboard, setFilteredLeaderboard] = useState()\n\n    useEffect(() => {\n        const sorted = leaderboard && leaderboard.sort((a, b) => {\n            if (a.time === b.time) {\n                if (a.moves === b.moves) {\n                    if (a.moves === b.moves) return 0;\n                    return a.moves < b.moves ? -1 : 1\n                }\n            } else {\n                return a.time < b.time ? -1 : 1\n            }\n        })\n        setFilteredLeaderboard(sorted)\n    }, [leaderboard])\n\n    return (\n        <>\n            <Header/>\n            <section className=\"leaderboard\">\n                <div className=\"container\">\n                    <div className=\"leaderboard__box\">\n                        <h1 className=\"leaderboard__title\">\n                            Leaderboard\n                        </h1>\n                        <ul className=\"leaderboard__board\">\n                            <li className=\"leaderboard__board-list\">\n                                <p className=\"title lp\">\n                                    LP.\n                                </p>\n                                <p className=\"title username\">\n                                    Nickname\n                                </p>\n                                <p className=\"title moves\">\n                                    Moves\n                                </p>\n                                <p className=\"title time\">\n                                    Time left\n                                </p>\n                            </li>\n                            {\n                                filteredLeaderboard && filteredLeaderboard.map((element, key) => <LeaderboardList item={element} id={key}/>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}