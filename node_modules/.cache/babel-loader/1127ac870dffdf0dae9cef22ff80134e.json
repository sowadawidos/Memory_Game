{"ast":null,"code":"var _jsxFileName = \"/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/GameBoard/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./GameBoard.scss\";\nimport { Card } from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GameBoard = ({\n  setPoints,\n  setMoves,\n  figuresArr\n}) => {\n  _s();\n\n  const [index, setIndex] = useState([]);\n  const [matchedIndex, setMatchedIndex] = useState([]);\n  console.log(figuresArr);\n\n  const getID = index => {\n    setIndex(prev => [...prev, index]);\n  };\n\n  useEffect(() => {\n    if (index && index.length === 2) {\n      setTimeout(() => {\n        setIndex([]);\n      });\n\n      if (index[0] === index[1]) {\n        setMatchedIndex(prev => [...prev, index[0]]);\n        setPoints(prev => prev + 1);\n      }\n    }\n  }, [index]);\n  console.log(index);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game__board\",\n      children: figuresArr.map(figure => /*#__PURE__*/_jsxDEV(Card, {\n        card: figure,\n        getID: getID,\n        matchedIndex: matchedIndex,\n        setMove: setMoves,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(GameBoard, \"7rGNbmdinz0gjtcPGrKvWfEOtOs=\");\n\n_c = GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/GameBoard/GameBoard.js"],"names":["React","useState","useEffect","Card","GameBoard","setPoints","setMoves","figuresArr","index","setIndex","matchedIndex","setMatchedIndex","console","log","getID","prev","length","setTimeout","map","figure"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,kBAAP;AACA,SAAQC,IAAR,QAAmB,cAAnB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAAA;;AAE5D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AACA,QAAMO,KAAK,GAAGN,KAAK,IAAI;AACnBC,IAAAA,QAAQ,CAACM,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUP,KAAV,CAAT,CAAR;AACH,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,IAAIA,KAAK,CAACQ,MAAN,KAAiB,CAA9B,EAAiC;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACbR,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAFS,CAAV;;AAGA,UAAID,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAtB,EAA2B;AACvBG,QAAAA,eAAe,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUP,KAAK,CAAC,CAAD,CAAf,CAAT,CAAf;AACAH,QAAAA,SAAS,CAACU,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAT;AACH;AACJ;AACJ,GAVQ,EAUN,CAACP,KAAD,CAVM,CAAT;AAYAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEQD,UAAU,CAACW,GAAX,CAAeC,MAAM,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,MAAZ;AAAoB,QAAA,KAAK,EAAEL,KAA3B;AAAkC,QAAA,YAAY,EAAEJ,YAAhD;AAA8D,QAAA,OAAO,EAAEJ,QAAvE;AAAiF,QAAA,KAAK,EAAEE;AAAxF;AAAA;AAAA;AAAA;AAAA,cAAzB;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH,CAhCM;;GAAMJ,S;;KAAAA,S","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./GameBoard.scss\"\nimport {Card} from \"../Card/Card\";\n\nexport const GameBoard = ({setPoints, setMoves, figuresArr}) => {\n\n    const [index, setIndex] = useState([])\n    const [matchedIndex, setMatchedIndex] = useState([])\n\n    console.log(figuresArr)\n    const getID = index => {\n        setIndex(prev => [...prev, index])\n    }\n\n    useEffect(() => {\n        if (index && index.length === 2) {\n            setTimeout(() => {\n                setIndex([])\n            }, )\n            if (index[0] === index[1]) {\n                setMatchedIndex(prev => [...prev, index[0]])\n                setPoints(prev => prev + 1)\n            }\n        }\n    }, [index])\n\n    console.log(index)\n    return (\n        <>\n            <div className=\"game__board\">\n                {\n                    figuresArr.map(figure => <Card card={figure} getID={getID} matchedIndex={matchedIndex} setMove={setMoves} index={index}/>)\n                }\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}