{"ast":null,"code":"var _jsxFileName = \"/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/GamePage/GamePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./GamePage.scss\";\nimport { GameBoard } from \"../GameBoard/GameBoard\";\nimport { Header } from \"../Header/Header\";\nimport { EndGame } from \"../EndGame/EndGame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GamePage = () => {\n  _s();\n\n  const figures = [{\n    figure: \"😇\",\n    id: 1\n  }, {\n    figure: \"😡\",\n    id: 2\n  }, {\n    figure: \"🤡\",\n    id: 3\n  }, {\n    figure: \"👻\",\n    id: 4\n  }, {\n    figure: \"🐵\",\n    id: 5\n  }, {\n    figure: \"🐹\",\n    id: 6\n  }, {\n    figure: \"🐯\",\n    id: 7\n  }, {\n    figure: \"🦧\",\n    id: 8\n  }, {\n    figure: \"🐍\",\n    id: 9\n  }];\n  const [points, setPoints] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [blur, setBlur] = useState(false); // const [time, setTime] = useState(5)\n  //\n  // // useEffect(() => {\n  // //     const interval = setInterval(() => {\n  // //         setTime(prev => prev - 1)\n  // //     }, 1000)\n  // // }, [])\n\n  const figuresArr = figures.concat(figures); // .sort(() => Math.random() - 0.5)\n\n  useEffect(() => {\n    if (points === 9) {\n      setBlur(true);\n    }\n  }, [points]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game__page\",\n      style: blur ? {\n        filter: \"blur(4px)\"\n      } : {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game__page-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"game__page-time\",\n            children: \"Time: 5 seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"game__page-points\",\n            children: [\"Score: \", points, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"game__page-points\",\n            children: [\"Moves: \", moves, \" moves\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n          setPoints: setPoints,\n          setMoves: setMoves,\n          figuresArr: figuresArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), blur && /*#__PURE__*/_jsxDEV(EndGame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GamePage, \"7mHLSRGrM6J897FqIB+YOsyPdl0=\");\n\n_c = GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["/Users/dawidsowinski/Desktop/KursCoderslab/Memory_Game/memory_game/src/components/GamePage/GamePage.js"],"names":["React","useState","useEffect","GameBoard","Header","EndGame","GamePage","figures","figure","id","points","setPoints","moves","setMoves","blur","setBlur","figuresArr","concat","filter"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./GamePage.scss\"\nimport {GameBoard} from \"../GameBoard/GameBoard\";\nimport {Header} from \"../Header/Header\";\nimport {EndGame} from \"../EndGame/EndGame\";\n\nexport const GamePage = () => {\n    const figures = [\n        {\n            figure: \"😇\",\n            id: 1\n        },\n        {\n            figure: \"😡\",\n            id: 2\n        },\n        {\n            figure: \"🤡\",\n            id: 3\n        },\n        {\n            figure: \"👻\",\n            id: 4\n        },\n        {\n            figure: \"🐵\",\n            id: 5\n        },\n        {\n            figure: \"🐹\",\n            id: 6\n        },\n        {\n            figure: \"🐯\",\n            id: 7\n        },\n        {\n            figure: \"🦧\",\n            id: 8\n        },\n        {\n            figure: \"🐍\",\n            id: 9\n        }]\n\n    const [points, setPoints] = useState(0)\n    const [moves, setMoves] = useState(0)\n    const [blur, setBlur] = useState(false);\n    // const [time, setTime] = useState(5)\n    //\n    // // useEffect(() => {\n    // //     const interval = setInterval(() => {\n    // //         setTime(prev => prev - 1)\n    // //     }, 1000)\n    // // }, [])\n\n    const figuresArr = figures.concat(figures)\n        // .sort(() => Math.random() - 0.5)\n\n    useEffect(() => {\n        if (points === 9) {\n            setBlur(true)\n        }\n    }, [points])\n\n    return (\n        <>\n            <Header/>\n            <section className=\"game__page\" style={blur ? {filter: \"blur(4px)\"} : {}}>\n                <div className=\"container\">\n                    <div className=\"game__page-info\">\n                        <h1 className=\"game__page-time\">\n                            Time: 5 seconds\n                        </h1>\n                        <h1 className=\"game__page-points\">\n                            Score: {points} points\n                        </h1>\n                        <h1 className=\"game__page-points\">\n                            Moves: {moves} moves\n                        </h1>\n                    </div>\n                    <GameBoard setPoints={setPoints} setMoves={setMoves} figuresArr={figuresArr}/>\n                </div>\n            </section>\n            {\n                blur && <EndGame/>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}