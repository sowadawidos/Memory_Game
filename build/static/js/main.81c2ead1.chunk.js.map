{"version":3,"sources":["components/Home/Home.js","components/Card/Card.js","components/GameBoard/GameBoard.js","components/Header/Header.js","components/EndGameTitle/EndGameTitle.js","components/EndGame/EndGame.js","components/GamePage/GamePage.js","API/API.js","components/LeaderboardList/LeaderboardList.js","components/Leaderboard/Leaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Card","card","getID","matchedIndex","setMove","index","useState","active","setActive","useEffect","setTimeout","includes","id","figure","onClick","prev","GameBoard","setPoints","setMoves","figuresArr","setIndex","setMatchedIndex","length","map","Header","EndGameTitle","text","EndGame","moves","points","getUser","time","blur","blurLose","input","setInput","select","setSelected","ReactDom","createPortal","type","name","onChange","e","target","value","disabled","event","preventDefault","document","getElementById","GamePage","setBlur","setBlurLose","setTime","interval","setInterval","clearInterval","style","filter","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","LeaderboardList","item","nickname","Leaderboard","leaderboard","filteredLeaderboard","setFilteredLeaderboard","sorted","sort","a","b","element","key","App","figures","setLeaderboard","concat","Math","random","console","log","collection","onSnapshot","querySnapshot","data","docs","doc","exact","path","user","add","catch","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81c2ead1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Home.scss\"\nimport {Link} from \"react-router-dom\";\n\nexport const Home = () => {\n    return (\n        <>\n            <section className=\"home\">\n                <div className=\"container\">\n                    <div className=\"home__box\">\n                        <h1 className=\"home__box-title\">\n                            MEMORY GAME\n                        </h1>\n                        <Link to={\"/game-board\"}>\n                            <button className=\"home__box-button\">\n                                Play\n                            </button>\n                        </Link>\n                        <Link to={\"/leaderboard\"}>\n                            <button className=\"home__box-button\">\n                                Leaderboard\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport './Card.scss'\n\nexport const Card = ({card, getID, matchedIndex, setMove, index}) => {\n    const [active, setActive] = useState(false)\n\n    const handleActive = () => {\n        setActive(true)\n\n        getID(card.id)\n\n        setMove(prev => prev + 1)\n    }\n    useEffect(() => {\n        if (index[1]) {\n            setTimeout(() => {\n                setActive(false)\n            }, 1000)\n        }\n    }, [index])\n\n    return (\n        <>\n            <div className=\"card\">\n                {\n                    active || matchedIndex.includes(card.id) ?\n                        <div className=\"card-front\">\n                            {card.figure}\n                        </div>\n                        :\n                        <div className=\"card-back\" onClick={handleActive}>\n                            <span>?</span>\n                        </div>\n                }\n            </div>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport \"./GameBoard.scss\"\nimport {Card} from \"../Card/Card\";\n\nexport const GameBoard = ({setPoints, setMoves, figuresArr}) => {\n\n    const [index, setIndex] = useState([])\n    const [matchedIndex, setMatchedIndex] = useState([])\n\n    const getID = index => {\n        setIndex(prev => [...prev, index])\n    }\n\n    useEffect(() => {\n        if (index && index.length === 2) {\n            setTimeout(() => {\n                setIndex([])\n            }, )\n            if (index[0] &&  index[0] === index[1]) {\n                setMatchedIndex(prev => [...prev, index[0]])\n                setPoints(prev => prev + 1)\n            }\n        }\n    }, [index])\n\n    return (\n        <>\n            <div className=\"game__board\">\n                {\n                    figuresArr && figuresArr.map(figure => <Card card={figure} getID={getID} matchedIndex={matchedIndex} setMove={setMoves} index={index}/>)\n                }\n            </div>\n        </>\n    )\n}","import React from \"react\";\nimport './Header.scss'\nimport {Link} from \"react-router-dom\";\n\nexport const Header = () => {\n    return (\n        <>\n            <section className=\"header\">\n                <div className=\"container\">\n                    <div className=\"header__logo\">\n                        Memory <span>Game</span>\n                    </div>\n                    <Link to={\"/\"}>\n                        <button className=\"exit__game\">\n                            Back to menu\n                        </button>\n                    </Link>\n                </div>\n            </section>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\n\nexport const EndGameTitle = ({text}) => {\n    return (\n        <>\n            <h1 className=\"end__game-title\">\n                {text}\n            </h1>\n        </>\n    )\n}","import React, {useState} from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./EndGame.scss\"\nimport {Link} from \"react-router-dom\"\nimport {EndGameTitle} from \"../EndGameTitle/EndGameTitle\"\n\nexport const EndGame = ({moves, points, getUser, time, text, blur, blurLose}) => {\n    const [input, setInput] = useState()\n    const [select, setSelected] = useState(false)\n\n    const handleInput = e => {\n        const {name, value} = e.target\n        setInput(prev => ({\n            ...prev,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        getUser({\n            ...input,\n            points: points,\n            moves: moves,\n            time: time\n        })\n        setSelected(true)\n    }\n\n    return ReactDom.createPortal(\n        <>\n            <section className=\"end__game\">\n                <div className=\"container\">\n                    <div className=\"end__game-box\">\n                        <EndGameTitle text={text}/>\n                        <h1 className=\"end__game-points\">\n                            Your points : {points}\n                        </h1>\n                        <h1 className=\"end__game-time\">\n                            Your time : {time}\n                        </h1>\n                        <h1 className=\"end__game-moves\">\n                            Your moves : {moves}\n                        </h1>\n                        {\n                            blur &&\n                                <>\n                                    <label>\n                                        Nickname:\n                                        <input type=\"text\" name=\"nickname\" onChange={handleInput}/>\n                                    </label>\n                                    <Link to={\"/leaderboard\"}>\n                                        <button className=\"end__game-btn\" disabled={select} onClick={handleSubmit}>\n                                            {\n                                                select ? \"Added to leaderboard\" : \"Add to leaderboard\"\n                                            }\n                                        </button>\n                                    </Link>\n                                </>\n                        }\n                    </div>\n                </div>\n            </section>\n        </>,\n        document.getElementById(\"portal\")\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport \"./GamePage.scss\"\nimport {GameBoard} from \"../GameBoard/GameBoard\";\nimport {Header} from \"../Header/Header\";\nimport {EndGame} from \"../EndGame/EndGame\";\n\nexport const GamePage = ({getUser, figuresArr}) => {\n    const [points, setPoints] = useState(0)\n    const [moves, setMoves] = useState(0)\n    const [blur, setBlur] = useState(false);\n    const [blurLose, setBlurLose] = useState(false);\n    const [time, setTime] = useState(50)\n\n\n    useEffect(() => {\n        const interval =\n            time > 0 && setInterval(() => {\n                setTime(prev => prev - 1)\n            }, 1000)\n        if (time === 0 || points === 9) {\n            clearInterval(interval)\n            setBlurLose(true)\n        }\n        return () => clearInterval(interval)\n    }, [time])\n\n    useEffect(() => {\n        if (points === 9) {\n            setBlur(true)\n        }\n    }, [points])\n\n    return (\n        <>\n            <Header/>\n            <section className=\"game__page\" style={blur || blurLose? {filter: \"blur(4px)\"} : {}}>\n                <div className=\"container\">\n                    <div className=\"game__page-info\">\n                        <h1 className=\"game__page-time\">\n                            Time: {time} seconds\n                        </h1>\n                        <h1 className=\"game__page-points\">\n                            Score: {points} points\n                        </h1>\n                        <h1 className=\"game__page-points\">\n                            Moves: {moves} moves\n                        </h1>\n                    </div>\n                    <GameBoard setPoints={setPoints} setMoves={setMoves} figuresArr={figuresArr}/>\n                </div>\n            </section>\n            {\n                blur && <EndGame points={points} moves={moves} getUser={getUser} time={time} text={\"You won!\"} blur={blur} blurLose={blurLose}/>\n            }\n            {\n                blurLose && <EndGame points={points} moves={moves} getUser={getUser} time={time} text={\"Time's up!\"} blurLose={blurLose} blur={blur}/>\n            }\n        </>\n    )\n}","import firebase from \"firebase\"\n\nexport const app = firebase.initializeApp({\n    apiKey: \"AIzaSyC8wgMOTtf1rLl_45EnhyjNkLP4ZVsu6gY\",\n    authDomain: \"memorycard-game-d38a6.firebaseapp.com\",\n    projectId: \"memorycard-game-d38a6\",\n    storageBucket: \"memorycard-game-d38a6.appspot.com\",\n    messagingSenderId: \"24165533630\",\n    appId: \"1:24165533630:web:4b9cdc3ff28b19f46d5bef\"\n})\n\nexport const db = app.firestore()\nexport default app\n","import React from \"react\";\n\nexport const LeaderboardList = ({item, id}) => {\n    return (\n        <>\n            <li className=\"leaderboard__board-list\">\n                <p className=\"all lp\">\n                    {id + 1}\n                </p>\n                <p className=\"all username\">\n                    {item.nickname}\n                </p>\n                <p className=\"all moves\">\n                    {item.moves}\n                </p>\n                <p className=\"all time\">\n                    {item.time}\n                </p>\n            </li>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport {Header} from \"../Header/Header\";\nimport \"./Leaderboard.scss\"\nimport {LeaderboardList} from \"../LeaderboardList/LeaderboardList\";\n\nexport const Leaderboard = ({leaderboard}) => {\n    const [filteredLeaderboard, setFilteredLeaderboard] = useState()\n\n    useEffect(() => {\n        const sorted = leaderboard && leaderboard.sort((a, b) => {\n            if (a.time === b.time) {\n                return a.moves - b.moves\n            } else {\n                return b.time - a.time\n            }\n        })\n        setFilteredLeaderboard(sorted)\n    }, [leaderboard])\n\n    return (\n        <>\n            <Header/>\n            <section className=\"leaderboard\">\n                <div className=\"container\">\n                    <div className=\"leaderboard__box\">\n                        <h1 className=\"leaderboard__title\">\n                            Leaderboard\n                        </h1>\n                        <ul className=\"leaderboard__board\">\n                            <li className=\"leaderboard__board-list\">\n                                <p className=\"title lp\">\n                                    LP.\n                                </p>\n                                <p className=\"title username\">\n                                    Nickname\n                                </p>\n                                <p className=\"title moves\">\n                                    Moves\n                                </p>\n                                <p className=\"title time\">\n                                    Time left\n                                </p>\n                            </li>\n                            {\n                                filteredLeaderboard && filteredLeaderboard.map((element, key) => <LeaderboardList item={element} id={key}/>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import './App.scss';\nimport React, {useState, useEffect} from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./scss/main.scss\"\nimport {Home} from \"./components/Home/Home\";\nimport {GamePage} from \"./components/GamePage/GamePage\";\nimport {db} from \"./API/API\"\nimport {Leaderboard} from \"./components/Leaderboard/Leaderboard\";\n\nfunction App() {\n    const figures = [\n        {\n            figure: \"😇\",\n            id: 1\n        },\n        {\n            figure: \"😡\",\n            id: 2\n        },\n        {\n            figure: \"🤡\",\n            id: 3\n        },\n        {\n            figure: \"👻\",\n            id: 4\n        },\n        {\n            figure: \"🐵\",\n            id: 5\n        },\n        {\n            figure: \"🐹\",\n            id: 6\n        },\n        {\n            figure: \"🐯\",\n            id: 7\n        },\n        {\n            figure: \"🦧\",\n            id: 8\n        },\n        {\n            figure: \"🐍\",\n            id: 9\n        }]\n\n    const [leaderboard, setLeaderboard] = useState()\n\n    const figuresArr = figures.concat(figures).sort(() => Math.random() - 0.5)\n\n    const getUser = user => {\n        if (db) {\n            db.collection(\"leaderboard\").add({\n                ...user\n            })\n                .catch(error => {\n                    console.error(error)\n                })\n        }\n    }\n    console.log(figuresArr)\n    useEffect(() => {\n        if (db) {\n            db.collection('leaderboard').onSnapshot(querySnapshot => {\n                const data = querySnapshot.docs.map(doc => ({\n                    ...doc.data()\n                }))\n                setLeaderboard(data)\n            })\n        }\n    }, [db])\n\n    return (\n        <div className=\"page\">\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home/>\n                    </Route>\n                    <Route path=\"/game-board\">\n                        <GamePage getUser={getUser} figuresArr={figuresArr}/>\n                    </Route>\n                    <Route path=\"/leaderboard\">\n                        <Leaderboard leaderboard={leaderboard}/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}